<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo博客按主题分类显示文章的方法</title>
      <link href="/2020/08/16/%E6%8C%89%E4%B8%BB%E9%A2%98%E5%88%86%E7%B1%BB%E6%98%BE%E7%A4%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2020/08/16/%E6%8C%89%E4%B8%BB%E9%A2%98%E5%88%86%E7%B1%BB%E6%98%BE%E7%A4%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>偶然在知乎上看到关于优化静态博客归档页面的<a href="https://www.zhihu.com/question/286245520" target="_blank" rel="noopener">问题</a>，看完问题描述后发现，下面这种“按主题分类显示文章”的方式我也很喜欢，所以自己摸索了一个可以实现这个效果的苯方法。<br><img src="http://ww1.sinaimg.cn/large/6dd14aacly1ghsww0uximj20kj05lq42.jpg" alt="3.png"></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>因为markdown是支持html标签的，所以要做的其实就是新建一个<strong>页面</strong>，然后用<strong>html语言</strong>写上想显示的主题、主题下的文章名和链接，最后定义不同内容的<strong>渲染样式</strong>就大功告成了。</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol><li><p><strong>新建一个页面</strong></p><p> 我新建的页面为“works”，中文名定为“作品集”。</p><p> 之所以不直接在主题已有的“归档”页面上修改，是因为经过尝试我发现这样修改并不会生效。“归档”界面的显示方式似乎并不受其对应的<code>index.md</code>文件内容的影响（也可能是我技术太差，望专业人士指教）。</p><p> 新建页面的教程网上很多，不再赘述。部署完成后的博客首页上，应该会出现一个像下面这样的新按钮：<br><img src="http://ww1.sinaimg.cn/large/6dd14aacly1ghsrn6qshmj20mm0byq3p.jpg" alt="1.png"></p></li><li><p><strong>用html语言书写页面显示内容</strong></p><p> 找到<code>yourname.github.io\source\works</code> 文件夹下的<code>index.md</code>文件，按以下结构列出每一主题名称及对应文章（如果对html感兴趣可参看笑来老师的这一篇<a href="https://github.com/baichampion/xiaolai.github.io/blob/master/2016/06/25/makecs-html-css/index.html" target="_blank" rel="noopener">简明教程</a>）。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;strong&gt;主题名称&lt;&#x2F;strong&gt; &lt;&#x2F;p&gt;  </span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;文章链接&quot;&gt;篇名&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;文章链接&quot;&gt;篇名&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">. . .</span><br></pre></td></tr></table></figure><p> 上面结构中出现的元素需要自己手动修改。想展示几个主题，就写几个类似这样的结构；一个主题下面有多少篇文章，就写多少文章链接。语句之间的空行不能省略。</p><p> 前面说这是个苯方法，原因就在这一步。你在这里需要手动填入每篇文章链接和篇名，当文章较多时，就显得繁琐。</p></li><li><p><strong>定义样式</strong><br> 在<code>index.md</code>文件的结尾处，加上以下语句：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">  strong &#123;</span><br><span class="line">    font-size: 26px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p> 经过我的测试，确实只需要设定字体大小这一个参数，就可以实现想要的效果。</p><p> 我推测是因为NexT主题中已经定义过strong、Link标签的渲染样式，所以不需要重复定义，所以我们只需要对独特需求做额外定义即可。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用NoteExpress输出双语参考文献</title>
      <link href="/2020/07/29/%E4%BD%BF%E7%94%A8NoteExpress%E8%BE%93%E5%87%BA%E5%8F%8C%E8%AF%AD%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE/"/>
      <url>/2020/07/29/%E4%BD%BF%E7%94%A8NoteExpress%E8%BE%93%E5%87%BA%E5%8F%8C%E8%AF%AD%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE/</url>
      
        <content type="html"><![CDATA[<p>在投稿时，一些期刊格式规定中文参考文献必需有英文对照，同时也对符号、翻译格式有特殊要求。而Noteexpress自带模板往往不能完全符合贴合格式要求，需要自定义输出模板。以《电网技术》参考文献格式要求为例，展示了自定义双语输出模板的制作方法。</p><p>《电网技术》参考文献格式 （字体要求已省略）：</p><blockquote><ol><li>标点除括弧为半角外，其余均为全角。</li><li>英文译文后需添加”(in Chinese)”后缀。<br>样例：<img src="https://upload-images.jianshu.io/upload_images/23878618-e7f5ccbd7788f3fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="电网技术参考文献样例"></li></ol></blockquote><h1 id="打开双语输出功能"><a href="#打开双语输出功能" class="headerlink" title="打开双语输出功能"></a>打开双语输出功能</h1><p>选择NE自带的“电网技术”样式模板，进入样式编辑器。点击左侧“双语输出”选项，在右侧面板中勾选“开启双语输出功能”，然后在下方选中“单列表”及“并列”选项。<br><img src="https://upload-images.jianshu.io/upload_images/23878618-7cb6549957f6d752.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开双语输出功能并设置"></p><h1 id="设置题录格式"><a href="#设置题录格式" class="headerlink" title="设置题录格式"></a>设置题录格式</h1><p><strong>模板</strong><br>模板定义题录的显示方式，包括要显示哪些文献要素，显示顺序如何，要素间的符号是什么等等。</p><p>选择样式编辑器左侧的“题录-模板”选项，按期刊格式要求修改文献元素、顺序、修改符号半全角等。</p><p>要注意的是，由于NE的中英文输出格式是各自独立互不同步的，所以在修改完默认显示的”English”选项卡格式后，还要点击右侧“Chinese”选项卡再修改一遍。<br><img src="https://upload-images.jianshu.io/upload_images/23878618-09e034c69aeb3356.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="设置符号格式"></p><p><strong>作者列表</strong><br>就《电网技术》格式要求来说，这一项只需要将中英文选项卡中的半角逗号改为全角逗号即可，其它期刊可按需修改（编者列表同理）。<br><img src="https://upload-images.jianshu.io/upload_images/23878618-02d33103b6824ae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="作者列表"></p><p><strong>作者姓名</strong><br>在中文人名的翻译上，NE的默认译法为先名后姓，而格式要求译为先姓后名的形式，所以需要在“Chinese”选项卡中做修改（编者姓名同理）。<br><img src="https://upload-images.jianshu.io/upload_images/23878618-33329b9f4d46b1d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="作者姓名"></p><p><strong>后缀</strong><br>在“Chinese”选项卡的后缀文本中填入的文字会自动显示在英文对照文献末尾。</p><p>若后缀错误地出现在中文题录末尾，则将题录的“标题译名”、“作者译名”、“期刊译名”3个字段补充完整即可正常显示。<br><img src="https://upload-images.jianshu.io/upload_images/23878618-427257292585acf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="后缀"><br><img src="https://upload-images.jianshu.io/upload_images/23878618-e875ca7c19a87698.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="in Chinese"></p><h1 id="调整"><a href="#调整" class="headerlink" title="调整"></a>调整</h1><p>经过测试，有些能在NE软件中预览正常的效果（如“in Chinese”后缀）在word中反而无法正常显示，另外还有某些段落设置无法生效（如设置行距为12磅），这时只能去除格式化后手动调整格式。</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoteExpress </tag>
            
            <tag> 参考文献格式 </tag>
            
            <tag> 论文写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab使用经验记录</title>
      <link href="/2020/07/07/Matlab%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E8%AE%B0%E5%BD%95/"/>
      <url>/2020/07/07/Matlab%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="将已有多个-fig文件绘制在一个坐标里"><a href="#将已有多个-fig文件绘制在一个坐标里" class="headerlink" title="将已有多个.fig文件绘制在一个坐标里"></a>将已有多个.fig文件绘制在一个坐标里</h1><p>利用图像句柄把figure图像中的参数读入到内存中，然后重新绘制即可，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">open(&#39;test1.fig&#39;)</span><br><span class="line">figure_info&#x3D;findall(gcf,&#39;type&#39;,&#39;line&#39;);    </span><br><span class="line">xdata1 &#x3D; get(figure_info,&#39;xdata&#39;);   </span><br><span class="line">ydata1 &#x3D; get(figure_info,&#39;ydata&#39;);   </span><br><span class="line">color1 &#x3D; get(figure_info,&#39;color&#39;);   </span><br><span class="line">subNum1 &#x3D; length(xdata1);</span><br><span class="line"></span><br><span class="line">open(&#39;test2.fig&#39;)</span><br><span class="line">figure_info&#x3D;findall(gcf,&#39;type&#39;,&#39;line&#39;);    </span><br><span class="line">xdata2 &#x3D; get(figure_info,&#39;xdata&#39;);   </span><br><span class="line">ydata2 &#x3D; get(figure_info,&#39;ydata&#39;);   </span><br><span class="line">color2 &#x3D; get(figure_info,&#39;color&#39;);   </span><br><span class="line">subNum2 &#x3D; length(xdata2);</span><br><span class="line"></span><br><span class="line">plot(xdata1&#123;2&#125;,ydata1&#123;2&#125;)</span><br><span class="line">hold on</span><br><span class="line">plot(xdata2&#123;2&#125;,ydata2&#123;2&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练字记录</title>
      <link href="/2020/07/01/%E7%BB%83%E5%AD%97%E8%AE%B0%E5%BD%95/"/>
      <url>/2020/07/01/%E7%BB%83%E5%AD%97%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="2020年7月"><a href="#2020年7月" class="headerlink" title="2020年7月"></a>2020年7月</h1><h2 id="2020年7月20日"><a href="#2020年7月20日" class="headerlink" title="2020年7月20日"></a>2020年7月20日</h2><p>横撇</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-80688c2d68d6711e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="200年7月19日"><a href="#200年7月19日" class="headerlink" title="200年7月19日"></a>200年7月19日</h2><p>撇捺</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-fb4174477503430e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月18日"><a href="#2020年7月18日" class="headerlink" title="2020年7月18日"></a>2020年7月18日</h2><p>竖提勾</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-e973e6a3649064a5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月17日"><a href="#2020年7月17日" class="headerlink" title="2020年7月17日"></a>2020年7月17日</h2><p>横竖钩</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-c86a3b47ab5b3527.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月16日"><a href="#2020年7月16日" class="headerlink" title="2020年7月16日"></a>2020年7月16日</h2><p>右弯钩，横钩</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-aa8484b7e0307785.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月15日"><a href="#2020年7月15日" class="headerlink" title="2020年7月15日"></a>2020年7月15日</h2><p>斜钩</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-b8f30226eeaee47a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月14日"><a href="#2020年7月14日" class="headerlink" title="2020年7月14日"></a>2020年7月14日</h2><p>直钩</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-2f0b5e1f383a548f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月13日"><a href="#2020年7月13日" class="headerlink" title="2020年7月13日"></a>2020年7月13日</h2><p>反捺</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-ff874420f5483220.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/23878618-02c1b66bae510aa5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月10日"><a href="#2020年7月10日" class="headerlink" title="2020年7月10日"></a>2020年7月10日</h2><p>正捺</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-63affabc0f78827d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月9日"><a href="#2020年7月9日" class="headerlink" title="2020年7月9日"></a>2020年7月9日</h2><p>大撇</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-66bd96202f92b607.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月8日"><a href="#2020年7月8日" class="headerlink" title="2020年7月8日"></a>2020年7月8日</h2><p>竖撇</p><p><img src="http://upload-images.jianshu.io/upload_images/23878618-538dd69b2facf8a3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月7日"><a href="#2020年7月7日" class="headerlink" title="2020年7月7日"></a>2020年7月7日</h2><p>中撇<br><img src="http://upload-images.jianshu.io/upload_images/23878618-72f312da4ea98bbe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月6日"><a href="#2020年7月6日" class="headerlink" title="2020年7月6日"></a>2020年7月6日</h2><p>写一点也是写……<br>短撇<br><img src="http://upload-images.jianshu.io/upload_images/23878618-4d54332b60b93ecc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><h2 id="2020年7月5日"><a href="#2020年7月5日" class="headerlink" title="2020年7月5日"></a>2020年7月5日</h2><p>长横<br><img src="http://upload-images.jianshu.io/upload_images/23878618-30dc15a8e983c21c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><hr><h2 id="2020年7月4日"><a href="#2020年7月4日" class="headerlink" title="2020年7月4日"></a>2020年7月4日</h2><p>没写几个字，30分钟就过去了。<br><img src="http://upload-images.jianshu.io/upload_images/23878618-d65027a0874e0216.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><hr><h2 id="2020年7月3日"><a href="#2020年7月3日" class="headerlink" title="2020年7月3日"></a>2020年7月3日</h2><p>没有写笔画的意识，画的成分太多。</p><p>文字是用来书写的符号，某些笔画的排布方式与实际书写需要紧密相关，按画画的感觉去练很容易忽略这些需求。<br><img src="http://upload-images.jianshu.io/upload_images/23878618-f62404602550f18f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><hr><h2 id="2020年7月2日"><a href="#2020年7月2日" class="headerlink" title="2020年7月2日"></a>2020年7月2日</h2><p>“受”字怎么写都很丑，先跳过。<br><img src="http://upload-images.jianshu.io/upload_images/23878618-175bdb484c749555.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p><hr><h2 id="2020年7月1日"><a href="#2020年7月1日" class="headerlink" title="2020年7月1日"></a>2020年7月1日</h2><p>虽然已经有意不用太大的力气握笔，但是写完几页之后手腕还是开始酸痛了。</p><p>吸取网友经验，练习初期重点关注整体结构，大致相似就行，不细抠细节，不期望在单个字中解决所有的问题。<br><img src="http://upload-images.jianshu.io/upload_images/23878618-62e1d7b6b38eca19.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/23878618-cf276df5355a34e6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/23878618-216c6aac11b9374d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/23878618-26de690c46d603d9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 练字 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章读后感</title>
      <link href="/2020/06/26/%E9%A9%AC%E5%B0%8F%E5%A9%B7%E5%88%A9%E6%BB%9A%E5%88%A9%E5%A4%A7%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/06/26/%E9%A9%AC%E5%B0%8F%E5%A9%B7%E5%88%A9%E6%BB%9A%E5%88%A9%E5%A4%A7%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>今天重新读了省钱系列文章，感觉自己又重新干劲满满，增强了一点折腾的信心。文章提到了很多便宜货，但其真正的目的是标题里的“利滚利”，更高一点，是相信自己有能力、有勇气、有智慧、有意志可以过得更好的心法。</p><p>只要生活着，就必然有衣食住行、日常琐事，千头万绪时经常发现自己忙了一天却一无所获。所以剔除生活中不重要的事情和物品、压缩某些生活必需事项的占用时间，是必要的。生活必需事项占有的资源越少，留给工作学习生产赚钱的时间资源就越多。</p><p>怎么压缩生活必需事项的占用时间，就是这篇文章说的事情了。总体思路是了解自己，了解自己的真实需求（不是消费主义洗脑的，或者自己想象的需求），并用最简洁省钱的方式达成它。</p><p>不过我在找“简洁方式”的时候经常失败。现代科技发展之丰富和消费主义的渗透有时会乱花渐欲迷人眼，让人把简单的事情想复杂。比如当我查跑步相关知识时，网络告诉我需要准备若干运动装备、app，并且要报健身房和请私教，让我觉得我好像根本学不会、也负担不起跑步这个运动似的。一个常常让我找到简洁之道的方法，是想象<strong>二十年前的人们会怎么达到这个目的</strong>，然后就会恍然大悟：原来跑步就是出门跑就是了。</p><p>鉴于文章真正想传达的是节省时间去搞生产、做会给自己带来财富的事情，那么如果看完文章就跑去淘宝花很长时间找便宜货，那就是与文章的本意南辕北辙。但是我自己一开始就理解错了。我第一次看完之后就扎进了淘宝，满心想的是我得到了便宜货的索引地图，这样我就可以用我有限的钱换来更多的东西——物欲仍然占据大脑的主导，没有领会精华。原因可能也挺好弄明白，消费可以带给人直接的、即时的刺激，相比之下，控制心灵、积累优势力量，显然不会让人立即得到成就感，甚至在最开始还会屡遭挫败。</p><p>幸而今天重读文章时发现了购物脑之前没有发现的精华，那么就要开始控制最近越来越旺的购物念头了。最近好像无论做什么事情，“需要买点什么东西”的想法都会一直在脑子里打转：收拾学校行李时缺少行李袋、开始记日记时缺少漂亮本子、读书时缺少kindle……但是这些外物根本不是做成事情的本身的必须，我只是某些特质与确定的物品联系在了一起，认为我拥有了某样东西，我就会相应地拥有某种优点，这是购物欲一直杀不灭的原因。实际上，只要我这个人没有发生改变，我买东西前过的是什么生活，买东西后过的还是什么生活，而鉴于买东西会让钱包更瘪，所以生活其实更可能过得不如以前。</p><p>以后专注于要做的事情本身，而不是趁机能往家里添点什么家伙事儿。目前家里有的物品已经能够支撑我完成几乎所有的事情，因为这是住了近10年的家，如果确实有什么东西是必不可少的，那10年后的现在也应该已经买回家中了。“买来某种物品我才能做成某件事”是购物欲狡猾的伪装，也是思考能力低下的表现。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 购物观 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑使用问题解决记录</title>
      <link href="/2020/06/07/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/"/>
      <url>/2020/06/07/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="组织策略有误导致打不开MS软件中的链接"><a href="#组织策略有误导致打不开MS软件中的链接" class="headerlink" title="组织策略有误导致打不开MS软件中的链接"></a>组织策略有误导致打不开MS软件中的链接</h1><p>系统的注册表设置有误。将下面这段保存为TXT文档，然后修改扩展名为.reg，点击执行即可解决。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CURRENT_USER\Software\Classes\.html]</span><br><span class="line">@&#x3D;&quot;HTMLfile&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\htmlfile\shell\open]</span><br><span class="line">@&#x3D;&quot;Open in S&amp;ame Window&quot;</span><br><span class="line">&quot;CommandId&quot;&#x3D;&quot;IE.File&quot;</span><br><span class="line">&quot;MUIVerb&quot;&#x3D;&quot;@C:\\Windows\\System32\\ieframe.dll,-5732&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\htmlfile\shell\open\command]</span><br><span class="line">@&#x3D;&quot;\&quot;C:\\Program Files\\Internet Explorer\\iexplore.exe\&quot; -- \&quot;%1\&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\htmlfile\shell\open\ddeexec]</span><br><span class="line">@&#x3D;&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\htmlfile\shell\open\ddeexec\Application]</span><br><span class="line">@&#x3D;&quot;IExplore&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\htmlfile\shell\open\deeexec]</span><br><span class="line">@&#x3D;&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\http\shell\open]</span><br><span class="line">&quot;CommandId&quot;&#x3D;&quot;IE.Protocol&quot;</span><br><span class="line">&quot;DontReturnProcessHandle&quot;&#x3D;&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\http\shell\open\command]</span><br><span class="line">@&#x3D;&quot;\&quot;C:\\Program Files\\Internet Explorer\\iexplore.exe\&quot; -- \&quot;%1\&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\http\shell\open\ddeexec]</span><br><span class="line">@&#x3D;&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\https\shell\open]</span><br><span class="line">&quot;CommandId&quot;&#x3D;&quot;IE.Protocol&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\https\shell\open\command]</span><br><span class="line">@&#x3D;&quot;\&quot;C:\\Program Files\\Internet Explorer\\iexplore.exe\&quot; -- \&quot;%1\&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\https\shell\open\ddeexec]</span><br><span class="line">@&#x3D;&quot;&quot;</span><br></pre></td></tr></table></figure><h1 id="下载一直播回放"><a href="#下载一直播回放" class="headerlink" title="下载一直播回放"></a>下载一直播回放</h1><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol><li>chrome浏览器</li><li>电脑软件”维棠”</li></ol><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ol><li>获得直播的m3u8链接<br>用chrome打开直播界面-&gt;按f12-&gt;选择移动模式-&gt;选择media-&gt;选择一个手机型号-&gt;刷新界面-&gt;右侧出现m3u8链接-&gt;右击copy link address</li><li>使用维棠下载<br>下载-&gt;新建-&gt;填入m3u8链接地址-&gt;立即下载。</li><li>下载后的文件如果是.mp4.vd!后缀，改成.mp4即可播放</li></ol>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一直播 </tag>
            
            <tag> 直播回放下载 </tag>
            
            <tag> 无法打开MS软件中的链接 </tag>
            
            <tag> office套件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关闭Next主题菜单页面标题显示</title>
      <link href="/2020/06/03/%E5%85%B3%E9%97%ADNext%E4%B8%BB%E9%A2%98%E8%8F%9C%E5%8D%95%E9%A1%B5%E9%9D%A2%E6%A0%87%E9%A2%98%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2020/06/03/%E5%85%B3%E9%97%ADNext%E4%B8%BB%E9%A2%98%E8%8F%9C%E5%8D%95%E9%A1%B5%E9%9D%A2%E6%A0%87%E9%A2%98%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="关闭方法"><a href="#关闭方法" class="headerlink" title="关闭方法"></a>关闭方法</h1><p>Next主题的菜单页面会默认显示一个标题，就像下图显示的那样。在我看来这个标题存在的必要性不大，因为这个界面是用户点击了相应文字之后出现的，相信用户不需要标题提醒就知道自己刚刚点了什么，就算真的一时想不起，还有下面总结性的小标题可以提示。另外我认为标题的占空太大，这让页面看起来没那么紧凑了。<br><img src="https://i.loli.net/2020/06/03/C8dqHWknAxhczUp.png" alt="默认显示标题.png"><br>所以我取消了菜单页面标题的显示，具体方法是找到<code>themes/next/layout/</code>路径下的<code>page.swig</code>文件，删除其中<code>PAGE BODY</code>上方的这一行内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &#39;_partials&#x2F;page-header.swig&#39; %&#125;</span><br></pre></td></tr></table></figure><p>这时再重新生成静态文件你就会发现，页面标题已经消失了，腾出了大块可以用来展示有效信息的空间。<br><img src="https://i.loli.net/2020/06/03/iMhOIoptqAfK94a.png" alt="关闭标题显示.png"></p><h1 id="修改当前菜单的网页标题"><a href="#修改当前菜单的网页标题" class="headerlink" title="修改当前菜单的网页标题"></a>修改当前菜单的网页标题</h1><p>按这种方法取消页面标题只是改变了网页的展示样式，标题变量本身还好好地保存在网页文件中，只是没有显示出来而已。所以现在仍然可以通过改变根目录下的<code>sourse\tags\index.md</code>等文件中的<code>title</code>值来改变网页标题栏文字。如按下文将<code>title</code>的值由“Tags”改为“标签”，网页的标题显示同样也会自动改变。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2020-06-01 22:45:28</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/06/03/O7W3dQrZJtRfv8N.png" alt="修改网页标题栏.png"></p><h1 id="发现这个关闭方法的心路历程"><a href="#发现这个关闭方法的心路历程" class="headerlink" title="发现这个关闭方法的心路历程"></a>发现这个关闭方法的心路历程</h1><p>作为一个对网页开发知之甚少的非专业人员，只能从文档名称和变量名称的含义来猜测它们之间的逻辑关系，并用“修改部分语句+本地预览”的形式验证自己的操作是不是能达到想要的效果。<br>通过网络搜索我知道了控制网页展示样式的文件夹是主题目录下的<code>layout</code>，还知道了这个文件夹里以下划线开头的文件在使用中都会被忽略。那么只需要再看一下非下划线开头的文件的名字，就可以很容易地猜到它们代表的是与其文件名称相对应的菜单项的展示样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">layout</span><br><span class="line"> ├─_custom</span><br><span class="line"> ├─_macro</span><br><span class="line"> ├─_partials</span><br><span class="line"> ├─_scripts</span><br><span class="line"> ├─_third-party</span><br><span class="line"> │  </span><br><span class="line"> │─archive.swig</span><br><span class="line"> ├─category.swig</span><br><span class="line"> ├─index.swig</span><br><span class="line"> ├─page.swig</span><br><span class="line"> ├─post.swig</span><br><span class="line"> ├─tag.swig</span><br><span class="line"> ├...</span><br></pre></td></tr></table></figure><p>既然想修改tag菜单的样式，那我自然而然地先打开了<code>tag.swig</code>文件，浏览了一遍，试图通过变量的命名方式来弄清每一部分的含义——我当然失败了，这些代码的陌生程度太高，仅仅认识里面的几个英文单词对理解它们的实际功能没有太大作用。不过我确实发现了一点什么，那就是在这个文件的开头发现了<code>import 某个名字以下划线开头的文件</code>的语句，这马上让我联想起了C语言中包含头文件的include语句，或许这里的import有同样的包含某个其它文件的含义。</p><p>再去翻看了所有swig文件中<code>import</code>语句之后列出的文件，发现它们的名字全部都是以下划线开头的，再结合它们的命名方式，我猜测这些所谓会“被忽略”的文件的功能其实有点像积木。把多数网页都会用到的元素样式定义为一个独立的文件，在网页的整体样式文件中只需要各取所需，把现成的积木组合起来形成一个完整拼图就好了。</p><p>这时我想起<code>tag</code>、<code>about</code>、<code>category</code>页面样式彼此非常相似，它们的积木拼合方式是类似的，甚至可能用的是同一个积木拼图。再联想新建<code>tag</code>、<code>about</code>、<code>category</code>时使用的模板都是<code>page</code>类型，就可以进一步猜想这个为菜单项们所共用的积木拼图就是<code>page.swig</code>。<br>于是又认真看了一遍<code>page.swig</code>的内容，最后在标识PAGE BODY的一大堆#号上方发现了一个<code>include ... page-header.swig</code>的语句。对比一下网页的位置，觉得它可能就是代表页面标题的语句，所以删除这条代码然后预览，果然成功了。</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next主题 </tag>
            
            <tag> 主题配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录使用Hexo+Github搭建静态博客中的问题</title>
      <link href="/2020/06/02/%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/06/02/%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="使用hexo-n-lt-name-gt-时没能在public文件夹中生成相应的静态文件"><a href="#使用hexo-n-lt-name-gt-时没能在public文件夹中生成相应的静态文件" class="headerlink" title="使用hexo n &lt;name&gt;时没能在public文件夹中生成相应的静态文件"></a>使用<code>hexo n &lt;name&gt;</code>时没能在<code>public</code>文件夹中生成相应的静态文件</h1><p>在为文章添加tag时，一定要在<code>-</code>后面加上空格，否则无法被识别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- hexo</span><br><span class="line">- 静态博客</span><br><span class="line">- 问题处理</span><br></pre></td></tr></table></figure><h1 id="为站点添加本地搜索"><a href="#为站点添加本地搜索" class="headerlink" title="为站点添加本地搜索"></a>为站点添加本地搜索</h1><p>虽然Hexo官方Wiki上给出了<a href="https://github.com/iissnan/hexo-theme-next/wiki/Swiftype%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2" target="_blank" rel="noopener">用Swiftype实现站内搜索</a>的方法，但是我详细查询之后发现Swiftype现在不再提供免费服务了。新注册用户在试用期结束之后不能再像以前那样可以继续以比较低的权限继续使用，而最低付费版本每月也要17美元左右。</p><p>使用Swiftype对钱包太不友好，再加上因为我身在墙内而造成的访问缓慢和定期登陆Swiftype手动获取网站文章的繁琐，让我很快就放弃了这个途径，甚至想要放弃在博客中添加站内搜索这个功能——毕竟现在也没有几篇文章，站内全文搜索目前没有那么必要。</p><p>不过后来我惊喜地发现，竟然有一个Hexo插件<code>hexo-generator-search</code>(<a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">项目github</a>)可以直接完成这个功能。</p><p>原理大概是在执行<code>hexo g</code>的过程中，插件会同时生成一个包含网站所有文章文本的XML文件，搜索时对比检索词和这个XML文件就可以迅速找到匹配的文章。</p><p>这个方法不用担心第三方服务停止，稳定性高，而且没有被墙的问题，目前看起来是非常理想的解决方案了，至于博文增多到一定程度后会不会卡的问题，等它出现了再解决也不迟。具体实现过程是这样的：</p><ol><li>使用git安装插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li><li>在<strong>站点</strong>配置文件<code>yourname.github.io\_config.yml</code>中配置插件<br>新增以下内容到任意位置：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li>在<strong>主题</strong>配置文件<code>themes/next/_config.yml</code>中启用本地搜索功能<br>将<code>local_search</code>字段下的<code>enable</code>的值，改成<code>true</code>：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # unescape html strings to the readable one</span><br></pre></td></tr></table></figure></li></ol><p>这时只要重新生成静态文件，部署到Github，你就会发现Hexo博客中出现了一个搜索按钮，通过输入检索词就可以对站内文章进行全文检索了。</p><p>这个搜索按钮是Hexo自动添加的，与使用的主题无关，因此不需要修改主题配置文件。我在配置的过程中就误以为搜索项与添加自定义菜单项一样需要<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">手动创建页面</a>，将主题配置文件<code>menu</code>字段中的<code>search</code>的注释去掉了，导致最后生成的静态网页上出现了两个搜索框。</p><p>参考文献：<br>[1] <a href="https://www.jianshu.com/p/02afabcae502" target="_blank" rel="noopener">百度学术</a><br>[2] <a href="https://www.sqlsec.com/2017/12/hexosearch.html" target="_blank" rel="noopener">Hexo博客无法搜索的终极解决方法</a><br>[3] <a href="https://www.jianshu.com/p/685bf59cde5e" target="_blank" rel="noopener">为Hexo blog博客创建本地搜索引擎</a></p><h1 id="在front-matter中为文章添加多个分类"><a href="#在front-matter中为文章添加多个分类" class="headerlink" title="在front-matter中为文章添加多个分类"></a>在<a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">front-matter</a>中为文章添加多个分类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [A, A1]</span><br><span class="line">- [B, B1]</span><br><span class="line">- [C]</span><br></pre></td></tr></table></figure><p>此时这篇文章同时包括A、B、C三个分类，其中A1、A2分别是A、B的子分类。</p><h1 id="改变theme后部署博客仍然显示旧主题"><a href="#改变theme后部署博客仍然显示旧主题" class="headerlink" title="改变theme后部署博客仍然显示旧主题"></a>改变theme后部署博客仍然显示旧主题</h1><p>可依次尝试以下方法：</p><ul><li>清除浏览器缓存，然后重新加载</li><li>先执行<code>hexo clean</code>，再部署</li><li>删除根目录下的<code>_deploy_git</code>文件，重新生成静态文件并部署</li></ul><h1 id="添加自定义菜单"><a href="#添加自定义菜单" class="headerlink" title="添加自定义菜单"></a>添加自定义菜单</h1><ol><li>在<strong>主题配置</strong>文件中添加菜单名称<br>名称在hexo中是一个代码，有点像编程时用的变量，用来匹配和检索翻译，如“works”。<br>在<code>themes/next/_config.yml</code>的<code>menu</code>字段下添加以下内容：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">works: &#x2F;works</span><br></pre></td></tr></table></figure></li><li>确定菜单对应的图标名<br>Font Awesome是一款基于css框架的网页字体图标库，它含有675个图标，完全开源并且免费。hexo可以通过图标名直接获取Font Awesome上的对应图标，不用下载保存到本地。所以需要做的事就是打开<a href="https://fontawesome.com/v4.7.0/icons/" target="_blank" rel="noopener">Font Awesome</a>，在上面找到喜欢的图标的名字，如“book”。</li><li>在<strong>主题配置</strong>文件中添加图标<br>在第一步添加的<code>works</code>名称后继续添加图标名：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">works: &#x2F;works|| book #works为自定义菜单名称，book为图标名字</span><br></pre></td></tr></table></figure></li><li>设置自定义菜单的显示文本<br>用于被第一步中设置的菜单名称查找的翻译文本保存在<code>themes/next/languages/语言种类.yml</code>中。若要添加一个自定义菜单，只需要在其中的<code>menu</code>字段中添加以下内容：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">works: 文集  #文集为works在网页上显示的中文文本</span><br></pre></td></tr></table></figure></li><li>自定义菜单显示页面<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &#39;name&#39;</span><br></pre></td></tr></table></figure>此时Hexo会自动在~\yourname.github.io\source\目录下生成一个name文件夹，其中有一个代表页面展示效果的文件：index.md。你可以按自己想要的布局去编辑这个文件，最终这个文件被渲染为html文件展示在你的博客上。</li></ol><h1 id="设置文章预览"><a href="#设置文章预览" class="headerlink" title="设置文章预览"></a>设置文章预览</h1><p>这个显示效果属于主题的控制范围，因此在<strong>主题配置文件</strong>中，将自动预览字段<code>auto_excerpt</code>的功能启动就可以了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: true #将此处改为ture</span><br><span class="line">  length: 150 #自动预览的长度</span><br></pre></td></tr></table></figure><h1 id="更多参考资料"><a href="#更多参考资料" class="headerlink" title="更多参考资料"></a>更多参考资料</h1><p>NexT主题<a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA-%22%E5%85%B3%E4%BA%8E%E6%88%91%22-%E9%A1%B5%E9%9D%A2" target="_blank" rel="noopener">项目Wiki</a><br>NexT主题<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">官方网站</a><br>Hexo<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a><br>NexT<a href="https://github.com/theme-next/awesome-next#live-preview" target="_blank" rel="noopener">主题预览</a></p><h1 id="自我提醒"><a href="#自我提醒" class="headerlink" title="自我提醒"></a>自我提醒</h1><p>在博客搭建好并添加必要的功能之后，就应该把注意力放在“创作更多更有用的博文”上，而不是沉迷于“猎奇新功能”，否则最后将得到一个外观非常美丽而内容非常贫瘠的博客。</p><p>使用太多hexo专属插件会让Markdown文本在不同平台之间的可迁移性降低，这就得不偿失了，毕竟我当初使用Markdown就是看中了它在可以在不同平台上迅速完成排版的特性。</p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 静态博客 </tag>
            
            <tag> 问题处理 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《曾国藩的正面与侧面》阅读笔记</title>
      <link href="/2020/06/01/%E3%80%8A%E6%9B%BE%E5%9B%BD%E8%97%A9%E7%9A%84%E6%AD%A3%E9%9D%A2%E4%B8%8E%E4%BE%A7%E9%9D%A2%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/06/01/%E3%80%8A%E6%9B%BE%E5%9B%BD%E8%97%A9%E7%9A%84%E6%AD%A3%E9%9D%A2%E4%B8%8E%E4%BE%A7%E9%9D%A2%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>《曾国藩的正面与侧面》阅读笔记</p><a id="more"></a><ol><li>遇到艰难，最好的办法是想尽一切办法解决遇到的困难，其它的都是虚的。所有受辱的感受，都是自己能力不足导致的，能做的只有打掉牙和血吞，艰苦奋斗。争一时的气没有意义，因为即使对方说不过或不愿意说而让我在口头上占了上风，我依然会因为没有实力而为人内心所不齿。<blockquote><p>对于有志者来说，挫辱是最大的动力，打击是最好的帮助。咬紧牙关，把挫辱生生吞下，就成了滋养自己决心和意志的营养。</p></blockquote></li><li>曾国藩常作为厚黑学的描述对象，但其人处事也有天真、不够圆融的时候。如向直言皇帝的缺点，想用这样的方式给他当头棒喝、幡然醒悟，但都事与愿违。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 日课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Markdown中自动插入图片的方法</title>
      <link href="/2020/04/07/%E5%9C%A8Markdown%E4%B8%AD%E8%87%AA%E5%8A%A8%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2020/04/07/%E5%9C%A8Markdown%E4%B8%AD%E8%87%AA%E5%8A%A8%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>在使用Markdown格式写文章时，总是需要在粘贴Markdown文档到平台的编辑器中后，再逐一将图片插入预先留下的位置,<strong>低效繁琐</strong>，容易出错。</p><p>今天找到了一个可以在Markdown中<strong>直接</strong>插入图片、无需手动逐个上传的方法。</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>将所需图片上传至<strong>图床</strong>，生成图片<strong>外链</strong>，然后将图片以Markdown语句的形式插入文中的对应位置。</p><p>此时再将Markdown文本复制到平台编辑器时，就可以<strong>自动加载</strong>已经上传到网络上的图片，不需要再在本地文件和各种软件、网页之间频繁切换了，无疑可以节省大量时间。</p><h1 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h1><p>经测试，微信公众平台不能直接拉取外链图片，需要借助第三方排版软件（如秀米）同步才行，而简书只支持系统自带Markdown格式，不支持自定义css模板渲染。</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p> <strong>工具：</strong></p><ul><li>Atom编辑器</li><li><code>markdown-preview-enhanced</code>（Atom插件）</li><li><code>markdown-image-assistant</code>（Atom插件）</li><li><code>Markdown here</code>（浏览器插件）</li></ul><p><strong>方法：</strong></p><ol><li>下载并安装 <a href="https://atom.io/" target="_blank" rel="noopener">Atom</a>在<strong>电脑</strong>；在<strong>浏览器</strong>中安装<a href="https://markdown-here.com/get.html" target="_blank" rel="noopener">Markdown here</a>插件</li><li>安装插件<code>markdown-image-assistant</code><br>在Atom界面中找到<code>File</code>-<code>Settings</code>-<code>Install</code>，在右侧搜索框中输入插件名称，点击<code>Packages</code>，在搜索结果中的相应插件上点击<code>Install</code>即可安装。可能会出现下载失败的的情况，多尝试几次基本都能成功。</li><li>安装插件<code>markdown-preview-enhanced</code>并做相应设置<br>按与上一步相同的方法安装插件后，在插件中设置图片自动上传功能：</li></ol><ul><li>打开插件的<code>setting</code>，在<code>Image Uploader</code>中选择<a href="https://sm.ms/" target="_blank" rel="noopener">sm.ms</a>图床网站（免费网站，每次最多可上传10张单个大小在5MB以内的图片）</li><li>在<code>Drop image to editor</code>中选择<code>upload</code></li></ul><ol start="4"><li>在Markdown中插入图片</li></ol><ul><li>在Atom中新建一个md文件</li><li>直接将所需图片拖拽至输入区。你会发现文本中出现了一个显示正在上传的语句：<br><img src="https://i.loli.net/2020/04/07/M6xZhbFlScnLXBa.png" alt=""><br>稍后上传成功后，语句就会自动更新为含有图片外链的形式：<br><img src="https://i.loli.net/2020/04/07/fv13SxHgql5YuOP.png" alt=""><br>将后面带有本地图片地址的语句删除，只留下含有图片外链地址的语句。这里也可以根据需要修改图片的输出尺寸。</li></ul><ol start="5"><li>将Markdown文本复制到发表平台的编辑器中,使用浏览器插件<code>Markdown here</code>转换即可直接得到带有图片的文章。</li></ol><h1 id="如果提示图片上传失败"><a href="#如果提示图片上传失败" class="headerlink" title="如果提示图片上传失败"></a>如果提示图片上传失败</h1><p>原因可能是图片被重复上传或者网络不稳定，解决方法是在sm.ms官网上重新上传一遍图片，在网页上的提示中再获取一次图片外链。</p><h1 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h1><p>经过测试，在简书markdown书写模式中上传图片生成的链接也可以直接在其它网页引用，所以完全可以把简书当做一个图床来用，将图片上传至简书（markdown编辑模式），然后粘贴生成链接到需要的地方即可。</p><p>当然这样插入过程就需要手动完成，不过简书做为国内网站稳定性高，这个麻烦倒也值得。</p><p>简书链接测试：<br><img src="http://upload-images.jianshu.io/upload_images/23878618-62e1d7b6b38eca19.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
